//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace App.EF
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Objects;
    using System.Data.Objects.DataClasses;
    using System.Linq;
    
    public partial class AEnimaEntities : DbContext
    {
        public AEnimaEntities()
            : base("name=AEnimaEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public DbSet<Aluguer> Aluguer { get; set; }
        public DbSet<AluguerDataFim> AluguerDataFim { get; set; }
        public DbSet<AluguerPrecoDuracao> AluguerPrecoDuracao { get; set; }
        public DbSet<Cliente> Cliente { get; set; }
        public DbSet<Empregado> Empregado { get; set; }
        public DbSet<Equipamento> Equipamento { get; set; }
        public DbSet<Preco> Preco { get; set; }
        public DbSet<Promocao> Promocao { get; set; }
        public DbSet<PromocaoDesconto> PromocaoDesconto { get; set; }
        public DbSet<PromocaoTemporal> PromocaoTemporal { get; set; }
        public DbSet<Tipo> Tipo { get; set; }
        public DbSet<AluguerView> AluguerView { get; set; }
        public DbSet<ClienteView> ClienteView { get; set; }
        public DbSet<EquipamentoDisponivelView> EquipamentoDisponivelView { get; set; }
        public DbSet<TipoView> TipoView { get; set; }
    
        [EdmFunction("AEnimaEntities", "CalcularDuracaoPreco")]
        public virtual IQueryable<CalcularDuracaoPreco_Result> CalcularDuracaoPreco(Nullable<int> pid, Nullable<int> eqId, Nullable<double> preco, Nullable<System.TimeSpan> duracao)
        {
            var pidParameter = pid.HasValue ?
                new ObjectParameter("pid", pid) :
                new ObjectParameter("pid", typeof(int));
    
            var eqIdParameter = eqId.HasValue ?
                new ObjectParameter("eqId", eqId) :
                new ObjectParameter("eqId", typeof(int));
    
            var precoParameter = preco.HasValue ?
                new ObjectParameter("preco", preco) :
                new ObjectParameter("preco", typeof(double));
    
            var duracaoParameter = duracao.HasValue ?
                new ObjectParameter("duracao", duracao) :
                new ObjectParameter("duracao", typeof(System.TimeSpan));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<CalcularDuracaoPreco_Result>("[AEnimaEntities].[CalcularDuracaoPreco](@pid, @eqId, @preco, @duracao)", pidParameter, eqIdParameter, precoParameter, duracaoParameter);
        }
    
        [EdmFunction("AEnimaEntities", "CalcularSemanaPassada")]
        public virtual IQueryable<CalcularSemanaPassada_Result> CalcularSemanaPassada(Nullable<System.DateTime> currentDate)
        {
            var currentDateParameter = currentDate.HasValue ?
                new ObjectParameter("currentDate", currentDate) :
                new ObjectParameter("currentDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<CalcularSemanaPassada_Result>("[AEnimaEntities].[CalcularSemanaPassada](@currentDate)", currentDateParameter);
        }
    
        [EdmFunction("AEnimaEntities", "EquipamentosLivres")]
        public virtual IQueryable<EquipamentosLivres_Result> EquipamentosLivres(Nullable<System.DateTime> inicio, Nullable<System.DateTime> fim, string tipo)
        {
            var inicioParameter = inicio.HasValue ?
                new ObjectParameter("inicio", inicio) :
                new ObjectParameter("inicio", typeof(System.DateTime));
    
            var fimParameter = fim.HasValue ?
                new ObjectParameter("fim", fim) :
                new ObjectParameter("fim", typeof(System.DateTime));
    
            var tipoParameter = tipo != null ?
                new ObjectParameter("tipo", tipo) :
                new ObjectParameter("tipo", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<EquipamentosLivres_Result>("[AEnimaEntities].[EquipamentosLivres](@inicio, @fim, @tipo)", inicioParameter, fimParameter, tipoParameter);
        }
    
        [EdmFunction("AEnimaEntities", "EquipamentosSemAlugueresNaUltimaSemana")]
        public virtual IQueryable<EquipamentosSemAlugueresNaUltimaSemana_Result> EquipamentosSemAlugueresNaUltimaSemana()
        {
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<EquipamentosSemAlugueresNaUltimaSemana_Result>("[AEnimaEntities].[EquipamentosSemAlugueresNaUltimaSemana]()");
        }
    
        [EdmFunction("AEnimaEntities", "GetPromocao")]
        public virtual IQueryable<GetPromocao_Result> GetPromocao(Nullable<int> pid, Nullable<int> eqId)
        {
            var pidParameter = pid.HasValue ?
                new ObjectParameter("pid", pid) :
                new ObjectParameter("pid", typeof(int));
    
            var eqIdParameter = eqId.HasValue ?
                new ObjectParameter("eqId", eqId) :
                new ObjectParameter("eqId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<GetPromocao_Result>("[AEnimaEntities].[GetPromocao](@pid, @eqId)", pidParameter, eqIdParameter);
        }
    
        [EdmFunction("AEnimaEntities", "GETPROMOTION")]
        public virtual IQueryable<GETPROMOTION_Result> GETPROMOTION(Nullable<int> pid, Nullable<int> eqId)
        {
            var pidParameter = pid.HasValue ?
                new ObjectParameter("pid", pid) :
                new ObjectParameter("pid", typeof(int));
    
            var eqIdParameter = eqId.HasValue ?
                new ObjectParameter("eqId", eqId) :
                new ObjectParameter("eqId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<GETPROMOTION_Result>("[AEnimaEntities].[GETPROMOTION](@pid, @eqId)", pidParameter, eqIdParameter);
        }
    
        public virtual int ActualizarCliente(Nullable<int> id, string nome, Nullable<int> nif, string morada)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            var nomeParameter = nome != null ?
                new ObjectParameter("nome", nome) :
                new ObjectParameter("nome", typeof(string));
    
            var nifParameter = nif.HasValue ?
                new ObjectParameter("nif", nif) :
                new ObjectParameter("nif", typeof(int));
    
            var moradaParameter = morada != null ?
                new ObjectParameter("morada", morada) :
                new ObjectParameter("morada", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ActualizarCliente", idParameter, nomeParameter, nifParameter, moradaParameter);
        }
    
        public virtual int ActualizarEquipamento(Nullable<int> id, string tipo, string descr)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            var tipoParameter = tipo != null ?
                new ObjectParameter("tipo", tipo) :
                new ObjectParameter("tipo", typeof(string));
    
            var descrParameter = descr != null ?
                new ObjectParameter("descr", descr) :
                new ObjectParameter("descr", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ActualizarEquipamento", idParameter, tipoParameter, descrParameter);
        }
    
        public virtual int ActualizarEquipamentoComNovoTipo(Nullable<int> id, string tipo, string descr, string descrTipo)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            var tipoParameter = tipo != null ?
                new ObjectParameter("tipo", tipo) :
                new ObjectParameter("tipo", typeof(string));
    
            var descrParameter = descr != null ?
                new ObjectParameter("descr", descr) :
                new ObjectParameter("descr", typeof(string));
    
            var descrTipoParameter = descrTipo != null ?
                new ObjectParameter("descrTipo", descrTipo) :
                new ObjectParameter("descrTipo", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ActualizarEquipamentoComNovoTipo", idParameter, tipoParameter, descrParameter, descrTipoParameter);
        }
    
        public virtual int ActualizarPreco(string tipo, Nullable<double> valor, Nullable<System.TimeSpan> duracao, Nullable<System.DateTime> validade, Nullable<double> novovalor, Nullable<System.TimeSpan> novaduracao, Nullable<System.DateTime> novavalidade)
        {
            var tipoParameter = tipo != null ?
                new ObjectParameter("tipo", tipo) :
                new ObjectParameter("tipo", typeof(string));
    
            var valorParameter = valor.HasValue ?
                new ObjectParameter("valor", valor) :
                new ObjectParameter("valor", typeof(double));
    
            var duracaoParameter = duracao.HasValue ?
                new ObjectParameter("duracao", duracao) :
                new ObjectParameter("duracao", typeof(System.TimeSpan));
    
            var validadeParameter = validade.HasValue ?
                new ObjectParameter("validade", validade) :
                new ObjectParameter("validade", typeof(System.DateTime));
    
            var novovalorParameter = novovalor.HasValue ?
                new ObjectParameter("novovalor", novovalor) :
                new ObjectParameter("novovalor", typeof(double));
    
            var novaduracaoParameter = novaduracao.HasValue ?
                new ObjectParameter("novaduracao", novaduracao) :
                new ObjectParameter("novaduracao", typeof(System.TimeSpan));
    
            var novavalidadeParameter = novavalidade.HasValue ?
                new ObjectParameter("novavalidade", novavalidade) :
                new ObjectParameter("novavalidade", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ActualizarPreco", tipoParameter, valorParameter, duracaoParameter, validadeParameter, novovalorParameter, novaduracaoParameter, novavalidadeParameter);
        }
    
        public virtual int ActualizarPromocao(Nullable<int> promotion_id, Nullable<System.DateTime> inicio, Nullable<System.DateTime> fim, string descr)
        {
            var promotion_idParameter = promotion_id.HasValue ?
                new ObjectParameter("promotion_id", promotion_id) :
                new ObjectParameter("promotion_id", typeof(int));
    
            var inicioParameter = inicio.HasValue ?
                new ObjectParameter("inicio", inicio) :
                new ObjectParameter("inicio", typeof(System.DateTime));
    
            var fimParameter = fim.HasValue ?
                new ObjectParameter("fim", fim) :
                new ObjectParameter("fim", typeof(System.DateTime));
    
            var descrParameter = descr != null ?
                new ObjectParameter("descr", descr) :
                new ObjectParameter("descr", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ActualizarPromocao", promotion_idParameter, inicioParameter, fimParameter, descrParameter);
        }
    
        public virtual int ActualizarPromocaoDesconto(Nullable<int> promotion_id, Nullable<System.DateTime> inicio, Nullable<System.DateTime> fim, string descr, Nullable<double> desconto)
        {
            var promotion_idParameter = promotion_id.HasValue ?
                new ObjectParameter("promotion_id", promotion_id) :
                new ObjectParameter("promotion_id", typeof(int));
    
            var inicioParameter = inicio.HasValue ?
                new ObjectParameter("inicio", inicio) :
                new ObjectParameter("inicio", typeof(System.DateTime));
    
            var fimParameter = fim.HasValue ?
                new ObjectParameter("fim", fim) :
                new ObjectParameter("fim", typeof(System.DateTime));
    
            var descrParameter = descr != null ?
                new ObjectParameter("descr", descr) :
                new ObjectParameter("descr", typeof(string));
    
            var descontoParameter = desconto.HasValue ?
                new ObjectParameter("desconto", desconto) :
                new ObjectParameter("desconto", typeof(double));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ActualizarPromocaoDesconto", promotion_idParameter, inicioParameter, fimParameter, descrParameter, descontoParameter);
        }
    
        public virtual int ActualizarPromocaoTemporal(Nullable<int> promotion_id, Nullable<System.DateTime> inicio, Nullable<System.DateTime> fim, string descr, Nullable<System.TimeSpan> tempoExtra)
        {
            var promotion_idParameter = promotion_id.HasValue ?
                new ObjectParameter("promotion_id", promotion_id) :
                new ObjectParameter("promotion_id", typeof(int));
    
            var inicioParameter = inicio.HasValue ?
                new ObjectParameter("inicio", inicio) :
                new ObjectParameter("inicio", typeof(System.DateTime));
    
            var fimParameter = fim.HasValue ?
                new ObjectParameter("fim", fim) :
                new ObjectParameter("fim", typeof(System.DateTime));
    
            var descrParameter = descr != null ?
                new ObjectParameter("descr", descr) :
                new ObjectParameter("descr", typeof(string));
    
            var tempoExtraParameter = tempoExtra.HasValue ?
                new ObjectParameter("tempoExtra", tempoExtra) :
                new ObjectParameter("tempoExtra", typeof(System.TimeSpan));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ActualizarPromocaoTemporal", promotion_idParameter, inicioParameter, fimParameter, descrParameter, tempoExtraParameter);
        }
    
        public virtual int InserirAluguer(Nullable<int> empregado, Nullable<int> cliente, Nullable<int> eqId, Nullable<System.DateTime> inicioAluguer, Nullable<System.TimeSpan> duracao, Nullable<double> preco, Nullable<int> pid, ObjectParameter novoID)
        {
            var empregadoParameter = empregado.HasValue ?
                new ObjectParameter("empregado", empregado) :
                new ObjectParameter("empregado", typeof(int));
    
            var clienteParameter = cliente.HasValue ?
                new ObjectParameter("cliente", cliente) :
                new ObjectParameter("cliente", typeof(int));
    
            var eqIdParameter = eqId.HasValue ?
                new ObjectParameter("eqId", eqId) :
                new ObjectParameter("eqId", typeof(int));
    
            var inicioAluguerParameter = inicioAluguer.HasValue ?
                new ObjectParameter("inicioAluguer", inicioAluguer) :
                new ObjectParameter("inicioAluguer", typeof(System.DateTime));
    
            var duracaoParameter = duracao.HasValue ?
                new ObjectParameter("duracao", duracao) :
                new ObjectParameter("duracao", typeof(System.TimeSpan));
    
            var precoParameter = preco.HasValue ?
                new ObjectParameter("preco", preco) :
                new ObjectParameter("preco", typeof(double));
    
            var pidParameter = pid.HasValue ?
                new ObjectParameter("pid", pid) :
                new ObjectParameter("pid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("InserirAluguer", empregadoParameter, clienteParameter, eqIdParameter, inicioAluguerParameter, duracaoParameter, precoParameter, pidParameter, novoID);
        }
    
        public virtual int InserirAluguerComNovoCliente(Nullable<int> cliente_nif, string cliente_nome, string cliente_morada, Nullable<int> empregado, Nullable<int> eqId, Nullable<System.DateTime> inicioAluguer, Nullable<System.TimeSpan> duracao, Nullable<double> preco, Nullable<int> pid, ObjectParameter novoID)
        {
            var cliente_nifParameter = cliente_nif.HasValue ?
                new ObjectParameter("cliente_nif", cliente_nif) :
                new ObjectParameter("cliente_nif", typeof(int));
    
            var cliente_nomeParameter = cliente_nome != null ?
                new ObjectParameter("cliente_nome", cliente_nome) :
                new ObjectParameter("cliente_nome", typeof(string));
    
            var cliente_moradaParameter = cliente_morada != null ?
                new ObjectParameter("cliente_morada", cliente_morada) :
                new ObjectParameter("cliente_morada", typeof(string));
    
            var empregadoParameter = empregado.HasValue ?
                new ObjectParameter("empregado", empregado) :
                new ObjectParameter("empregado", typeof(int));
    
            var eqIdParameter = eqId.HasValue ?
                new ObjectParameter("eqId", eqId) :
                new ObjectParameter("eqId", typeof(int));
    
            var inicioAluguerParameter = inicioAluguer.HasValue ?
                new ObjectParameter("inicioAluguer", inicioAluguer) :
                new ObjectParameter("inicioAluguer", typeof(System.DateTime));
    
            var duracaoParameter = duracao.HasValue ?
                new ObjectParameter("duracao", duracao) :
                new ObjectParameter("duracao", typeof(System.TimeSpan));
    
            var precoParameter = preco.HasValue ?
                new ObjectParameter("preco", preco) :
                new ObjectParameter("preco", typeof(double));
    
            var pidParameter = pid.HasValue ?
                new ObjectParameter("pid", pid) :
                new ObjectParameter("pid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("InserirAluguerComNovoCliente", cliente_nifParameter, cliente_nomeParameter, cliente_moradaParameter, empregadoParameter, eqIdParameter, inicioAluguerParameter, duracaoParameter, precoParameter, pidParameter, novoID);
        }
    
        public virtual int InserirCliente(string nome, Nullable<int> nif, string morada, ObjectParameter idCliente)
        {
            var nomeParameter = nome != null ?
                new ObjectParameter("nome", nome) :
                new ObjectParameter("nome", typeof(string));
    
            var nifParameter = nif.HasValue ?
                new ObjectParameter("nif", nif) :
                new ObjectParameter("nif", typeof(int));
    
            var moradaParameter = morada != null ?
                new ObjectParameter("morada", morada) :
                new ObjectParameter("morada", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("InserirCliente", nomeParameter, nifParameter, moradaParameter, idCliente);
        }
    
        public virtual int InserirEquipamento(string tipo, string descr, ObjectParameter novoID)
        {
            var tipoParameter = tipo != null ?
                new ObjectParameter("tipo", tipo) :
                new ObjectParameter("tipo", typeof(string));
    
            var descrParameter = descr != null ?
                new ObjectParameter("descr", descr) :
                new ObjectParameter("descr", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("InserirEquipamento", tipoParameter, descrParameter, novoID);
        }
    
        public virtual int InserirEquipamentoComTipo(string tipo, string descr, string descrTipo, ObjectParameter novoID)
        {
            var tipoParameter = tipo != null ?
                new ObjectParameter("tipo", tipo) :
                new ObjectParameter("tipo", typeof(string));
    
            var descrParameter = descr != null ?
                new ObjectParameter("descr", descr) :
                new ObjectParameter("descr", typeof(string));
    
            var descrTipoParameter = descrTipo != null ?
                new ObjectParameter("descrTipo", descrTipo) :
                new ObjectParameter("descrTipo", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("InserirEquipamentoComTipo", tipoParameter, descrParameter, descrTipoParameter, novoID);
        }
    
        public virtual int InserirPreco(string tipo, Nullable<double> valor, Nullable<System.TimeSpan> duracao, Nullable<System.DateTime> validade)
        {
            var tipoParameter = tipo != null ?
                new ObjectParameter("tipo", tipo) :
                new ObjectParameter("tipo", typeof(string));
    
            var valorParameter = valor.HasValue ?
                new ObjectParameter("valor", valor) :
                new ObjectParameter("valor", typeof(double));
    
            var duracaoParameter = duracao.HasValue ?
                new ObjectParameter("duracao", duracao) :
                new ObjectParameter("duracao", typeof(System.TimeSpan));
    
            var validadeParameter = validade.HasValue ?
                new ObjectParameter("validade", validade) :
                new ObjectParameter("validade", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("InserirPreco", tipoParameter, valorParameter, duracaoParameter, validadeParameter);
        }
    
        public virtual int InserirPromocao(Nullable<System.DateTime> inicio, Nullable<System.DateTime> fim, string descricao, string tipo, ObjectParameter id)
        {
            var inicioParameter = inicio.HasValue ?
                new ObjectParameter("inicio", inicio) :
                new ObjectParameter("inicio", typeof(System.DateTime));
    
            var fimParameter = fim.HasValue ?
                new ObjectParameter("fim", fim) :
                new ObjectParameter("fim", typeof(System.DateTime));
    
            var descricaoParameter = descricao != null ?
                new ObjectParameter("descricao", descricao) :
                new ObjectParameter("descricao", typeof(string));
    
            var tipoParameter = tipo != null ?
                new ObjectParameter("tipo", tipo) :
                new ObjectParameter("tipo", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("InserirPromocao", inicioParameter, fimParameter, descricaoParameter, tipoParameter, id);
        }
    
        public virtual int InserirPromocaoDesconto(Nullable<System.DateTime> inicio, Nullable<System.DateTime> fim, string descricao, string tipo, Nullable<double> desconto)
        {
            var inicioParameter = inicio.HasValue ?
                new ObjectParameter("inicio", inicio) :
                new ObjectParameter("inicio", typeof(System.DateTime));
    
            var fimParameter = fim.HasValue ?
                new ObjectParameter("fim", fim) :
                new ObjectParameter("fim", typeof(System.DateTime));
    
            var descricaoParameter = descricao != null ?
                new ObjectParameter("descricao", descricao) :
                new ObjectParameter("descricao", typeof(string));
    
            var tipoParameter = tipo != null ?
                new ObjectParameter("tipo", tipo) :
                new ObjectParameter("tipo", typeof(string));
    
            var descontoParameter = desconto.HasValue ?
                new ObjectParameter("desconto", desconto) :
                new ObjectParameter("desconto", typeof(double));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("InserirPromocaoDesconto", inicioParameter, fimParameter, descricaoParameter, tipoParameter, descontoParameter);
        }
    
        public virtual int InserirPromocaoTemporal(Nullable<System.DateTime> inicio, Nullable<System.DateTime> fim, string descricao, string tipo, Nullable<System.TimeSpan> tempoExtra)
        {
            var inicioParameter = inicio.HasValue ?
                new ObjectParameter("inicio", inicio) :
                new ObjectParameter("inicio", typeof(System.DateTime));
    
            var fimParameter = fim.HasValue ?
                new ObjectParameter("fim", fim) :
                new ObjectParameter("fim", typeof(System.DateTime));
    
            var descricaoParameter = descricao != null ?
                new ObjectParameter("descricao", descricao) :
                new ObjectParameter("descricao", typeof(string));
    
            var tipoParameter = tipo != null ?
                new ObjectParameter("tipo", tipo) :
                new ObjectParameter("tipo", typeof(string));
    
            var tempoExtraParameter = tempoExtra.HasValue ?
                new ObjectParameter("tempoExtra", tempoExtra) :
                new ObjectParameter("tempoExtra", typeof(System.TimeSpan));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("InserirPromocaoTemporal", inicioParameter, fimParameter, descricaoParameter, tipoParameter, tempoExtraParameter);
        }
    
        public virtual int RemoverAluguer(string serial)
        {
            var serialParameter = serial != null ?
                new ObjectParameter("serial", serial) :
                new ObjectParameter("serial", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("RemoverAluguer", serialParameter);
        }
    
        public virtual int RemoverAlugueresParaCliente(Nullable<int> cid)
        {
            var cidParameter = cid.HasValue ?
                new ObjectParameter("cid", cid) :
                new ObjectParameter("cid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("RemoverAlugueresParaCliente", cidParameter);
        }
    
        public virtual int RemoverCliente(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("RemoverCliente", idParameter);
        }
    
        public virtual int RemoverEquipamento(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("RemoverEquipamento", idParameter);
        }
    
        public virtual int RemoverPreco(string tipo, Nullable<double> valor, Nullable<System.TimeSpan> duracao, Nullable<System.DateTime> validade)
        {
            var tipoParameter = tipo != null ?
                new ObjectParameter("tipo", tipo) :
                new ObjectParameter("tipo", typeof(string));
    
            var valorParameter = valor.HasValue ?
                new ObjectParameter("valor", valor) :
                new ObjectParameter("valor", typeof(double));
    
            var duracaoParameter = duracao.HasValue ?
                new ObjectParameter("duracao", duracao) :
                new ObjectParameter("duracao", typeof(System.TimeSpan));
    
            var validadeParameter = validade.HasValue ?
                new ObjectParameter("validade", validade) :
                new ObjectParameter("validade", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("RemoverPreco", tipoParameter, valorParameter, duracaoParameter, validadeParameter);
        }
    
        public virtual int RemoverPromocao(Nullable<int> pid)
        {
            var pidParameter = pid.HasValue ?
                new ObjectParameter("pid", pid) :
                new ObjectParameter("pid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("RemoverPromocao", pidParameter);
        }
    
        public virtual int RemoverPromocaoDesconto(Nullable<int> pid)
        {
            var pidParameter = pid.HasValue ?
                new ObjectParameter("pid", pid) :
                new ObjectParameter("pid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("RemoverPromocaoDesconto", pidParameter);
        }
    
        public virtual int RemoverPromocaoTemporal(Nullable<int> pid)
        {
            var pidParameter = pid.HasValue ?
                new ObjectParameter("pid", pid) :
                new ObjectParameter("pid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("RemoverPromocaoTemporal", pidParameter);
        }
    
        public virtual int UpdateCliente(Nullable<int> id, string nome, Nullable<int> nif, string morada)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            var nomeParameter = nome != null ?
                new ObjectParameter("nome", nome) :
                new ObjectParameter("nome", typeof(string));
    
            var nifParameter = nif.HasValue ?
                new ObjectParameter("nif", nif) :
                new ObjectParameter("nif", typeof(int));
    
            var moradaParameter = morada != null ?
                new ObjectParameter("morada", morada) :
                new ObjectParameter("morada", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UpdateCliente", idParameter, nomeParameter, nifParameter, moradaParameter);
        }
    }
}
